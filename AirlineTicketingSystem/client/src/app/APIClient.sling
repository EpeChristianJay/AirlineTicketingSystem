import jk.widget.web
import jk.ui
import jk.widget
class is JSONAPIClientWithGui:

pvar widgetDefaultErrorHandler as function<void, Error>
var instance static as this

func getInstance static as this:
    return instance

func create(context as GuiApplicationContext, parentWidget as Widget = null) static as this
{
    assert context
    instance = new this()
    instance.setApiUrl(" ")
    instance.setContext(context)
    if parentWidget:
        instance.setParentWidget(parentWidget)
    return instance
}

func onError(error as Error, callback as function<void,Error>) override
{
    assert callback:
        onDefaultErrorHandler(error)
    base.onError(error, callback)
}

func onDefaultErrorHandler(error as Error) override
{
    var context = assert getContext()
    assert error
    assert widgetDefaultErrorHandler:
        context.showErrorDialog(error.toString())
    widgetDefaultErrorHandler(error)
}

func addAirlineSched(data as DynamicMap, callback as function<void, DynamicMap>, errorCallback as function<void, Error>):
    doPost("/AirlineSched", data, callback, errorCallback)

func updateAirlineSched(id as string, data as DynamicMap, callback as function<void, DynamicMap>, errorCallback as function<void, Error>):
    doPut("/AirlineSched/" .. id, data, callback, errorCallback)

func deleteAirlineSched(id as string, callback as function<void, DynamicMap>, errorCallback as function<void, Error>):
    doDelete("/AirlineSched/" .. id, callback, errorCallback)

func getAirlineSched(callback as function<void, DynamicMap>, errorCallback as function<void, Error> = null):
    doGet("/AirlineShed", callback, errorCallback)

